var g_ne = [[-2, 0, -1, 0, 0, 0, 0, 1, -1, 2],
            [-1, -1, -1, 0, 0, 0, -2, 1, 0, 1],
            [-1, -1, 0, -1, -2, 0, 0, 0, 0, 1],
            [-1, -1, 0, -1, 0, 0, 1, 0, -1, 1]];

var g_se = [[-1, -2, 0, -1, -2, 0, -1, 0, 0, 0],
            [-2, -1, 0, -1, -1, 0, 0, 0, -1, 1],
            [0, -1, -2, 0, 0, 0, -1, 1, 0, 1],
            [-1, -1, 0, 0, 1, 0, -1, 1, 0, 1]];

var g_sw = [[1, -2, 0, -1, 0, 0, 1, 0, 2, 0],
            [0, -1, 2, -1, 0, 0, 1, 0, 1, 1],
            [0, -1, 0, 0, 2, 0, 0, 1, 1, 1],
            [1, -1, -1, 0, 0, 0, 0, 1, 1, 1]];

var g_nw = [[0, 0, 1, 0, 2, 0, 0, 1, 1, 2],
            [1, -1, 0, 0, 1, 0, 0, 1, 2, 1],
            [0, -1, 1, -1, 0, 0, 2, 0, 0, 1],
            [0, -1, 1, -1, -1, 0, 0, 0, 1, 1]];

function append_with_shift(cells1, cells2, x, y) {
    for (var i = 0; i < cells2.length; i += 2) {
        cells1.push(cells2[i] + x)
        cells1.push(cells2[i+1] + y)
    }
}

function add_gliders(cells, gs, gcells, vx, vy, t) {
    for (var i = 0; i < gs.length; i += 2) {
        var phase = (t + gs[i+1]) % 4;
        if (phase < 0) phase += 4;
        var d = (t + gs[i+1] - phase) / 4;
        append_with_shift(cells, gcells[phase], gs[i] + vx * d, vy * d);
    }
}

function transform(cells, trans) {
    for (var i = 0; i < cells.length; i += 2) {
        var tmp    = trans[0] + cells[i] * trans[2] + cells[i+1] * trans[3];
        cells[i+1] = trans[1] + cells[i] * trans[4] + cells[i+1] * trans[5];
        cells[i]   = tmp;
    }
}

function compose(t1, t2) {
    var arr = [0,0,1,0,0,1];
    transform(arr, t1);
    transform(arr, t2);
    return [arr[0], arr[1], arr[2]-arr[0], arr[4]-arr[0], arr[3]-arr[1], arr[5]-arr[1]];
}

function inverse(t) {
    var det = t[2] * t[5] - t[3] * t[4];
    var arr = [0, 0, det * t[5], -det * t[3], -det * t[4], det * t[2]];
    var p = [-t[0], -t[1]];
    transform(p, arr);
    arr[0] = p[0];
    arr[1] = p[1];
    return arr;
}

function decodeCanon(apgcode) {

    var i;
    var chars = "0123456789abcdefghijklmnopqrstuvwxyz"

    for (i = 0; i < apgcode.length; i++) {
        if (apgcode[i] == "_") {
            i += 1;
            break;
        }
    }
    
    var blank = 0;
    var x = 0;
    var y = 0;
    var cells = []
    
    for (/**/; i < apgcode.length; i++) {
   
        var c = apgcode[i];
        if (blank) {
            x += chars.indexOf(c);
            blank = 0;
        } else if (c == 'y') {
            x += 4;
            blank = 1;
        } else if (c == 'x') {
            x += 3;
        } else if (c == 'w') {
            x += 2;
        } else if (c == 'z') {
            x = 0;
            y += 5;
        } else {
            v = chars.indexOf(c);
            for (var j = 0; j < 5; j++)
                if (v & (1 << j)) {
                    cells.push(x);
                    cells.push(y+j);
                }
            x += 1;
        }
    }

    return cells;
}

function display_edge(cells, edge, post_transform, offset) {

    var input_cells = decodeCanon(edge.input_code)
    add_gliders(input_cells, edge.gs_ne, g_ne,  1, -1, 0);
    add_gliders(input_cells, edge.gs_se, g_se,  1,  1, 0);
    add_gliders(input_cells, edge.gs_sw, g_sw, -1,  1, 0);
    add_gliders(input_cells, edge.gs_nw, g_nw, -1, -1, 0);

    var output_cells = decodeCanon(edge.output_code);

    var new_transform = compose(inverse(edge.transform), post_transform);

    transform(input_cells, new_transform);
    transform(output_cells, post_transform);

    append_with_shift(cells, input_cells, 0, offset);
    append_with_shift(cells, output_cells, 100, offset);

    return new_transform;

}

function get_synthesis(cells, apgcode) {
    
    var offset = 0;
    var cost = 0;
    var trans = [0,0,1,0,0,1];

    while (apgcode != "0") {
        
        if (!min_paths.hasOwnProperty(apgcode))
            return "unknown";

        var edge = min_paths[apgcode];

        trans = display_edge(cells, edge, trans, offset);

        apgcode = edge.input_code;
        cost += edge.cost;

        offset -= 100;
    }

    return cost;
}

function add_symbol(out_pair, num, symbol) {
    if (num == 0) return;
    if (num > 1) symbol = num.toString() + symbol;
    out_pair[1] += symbol.length;
    if (out_pair[1] > 77) {
        out_pair[0] += "<br>";
        out_pair[1] = symbol.length;
    }
    out_pair[0] += symbol;
}

function cells_to_rle(cells) {

    if (cells.length == 0) return "x = 0, y = 0, rule = B3/S23<br>!";

    var minx = 99999;
    var maxx = -99999;
    var miny = 99999;
    var maxy = -99999;

    for (var i = 0; i < cells.length; i += 2) {

        x = cells[i];
        y = cells[i+1];

        if (x > maxx) maxx = x;
        if (x < minx) minx = x;
        if (y > maxy) maxy = y;
        if (y < miny) miny = y;

    }

    var pairs = [];
    for (var i = 0; i < cells.length; i += 2)
        pairs.push((cells[i]-minx) + 1024 * cells[i+1]);
    pairs.sort(function(a,b){return a-b});

    for (var i = 0; i < pairs.length; i++) {
        cells[2*i] = pairs[i] & 1023;
        cells[2*i+1] = pairs[i] >> 10;
    }

    var w = maxx - minx + 1;
    var h = maxy - miny + 1;
    var output = "x = " + w.toString() + ", y = " + h.toString() + ", rule = B3/S23<br>";

    var x = cells[0];
    var y = cells[1];
    var on_start = cells[0];
    var off_start = 0;
    var out_pair = [output, 0];

    for (var i = 2; i < cells.length; i += 2) {

        if (cells[i] == x + 1 && cells[i+1] == y) {
            x++;
        } else {
            
            add_symbol(out_pair, on_start - off_start, "b");
            add_symbol(out_pair, x + 1 - on_start, "o");

            off_start = x + 1;

            var new_lines = cells[i+1] - y;
            if (new_lines > 0) {
                add_symbol(out_pair, new_lines, "$");
                off_start = 0;
            }

            x = on_start = cells[i];
            y = cells[i+1];
        }        
    }

    add_symbol(out_pair, on_start - off_start, "b");
    add_symbol(out_pair, x + 1 - on_start, "o");

    return out_pair[0] + "!";
    
}

function to_int_array(s) {
    if (s == "") return [];
    var sp = s.split(",");
    for (var i = 0; i < sp.length; i++)
        sp[i] = parseInt(sp[i]);
    return sp;
}

function apgcode_to_synthesis_rle(apgcode) {

    var cells = [];
    var cost = get_synthesis(cells, apgcode);
    
    if (cost == "unknown") 
        return cost;
    else {
        var rle = cells_to_rle(cells);
        return "#C " + apgcode + " costs " + cost + " gliders<br>" + rle;
    }

}

function string_to_edge(s) {

    var edge = new Object();
    var sp = s.split(";");

    edge.input_code = sp[0];
    edge.output_code = sp[1];
    edge.phase = parseInt(sp[2]);
    edge.gs_ne = to_int_array(sp[3]);
    edge.gs_se = to_int_array(sp[4]);
    edge.gs_sw = to_int_array(sp[5]);
    edge.gs_nw = to_int_array(sp[6]);
    edge.transform = to_int_array(sp[7]);
    edge.cost = (edge.gs_ne.length + edge.gs_se.length 
                 + edge.gs_sw.length + edge.gs_nw.length) / 2;
    
    return edge;

}

var min_paths = function(strings) {
    var out = new Object();
    for (var i = 0; i < strings.length; i++) {
        var edge = string_to_edge(strings[i]);
        out[edge.output_code] = edge;
    }
    return out;
}([
"0;xs12_4alla4;0;20,-71,27,-71;7,6;23,9,38,45;-6,-127,-5,-88,-1,-99,0,-58;12,15,1,0,0,1",
"0;xs12_4ai3s4zx1;0;7,-21;0,8;21,8;-4,-53,-2,-35,8,-28;2,5,1,0,0,-1",
"xs8_32qk;xs12_ghn84cz1;0;15,-74;11,-128,17,-78;;;0,-1,0,1,1,0",
"0;xs8_32qk;0;9,-28;3,6;9,9;7,-30;11,4,-1,0,0,-1",
"0;xs12_642tic;0;;-18,81,-5,55,2,33,9,5;23,18,29,38,36,39;-13,-108,0,-93;14,14,0,1,1,0",
"0;xs12_321f84c;0;;;2,10,16,6;-6,-26,0,-94,7,-22,8,-36;11,8,-1,0,0,1",
"0;xs12_2ege123;0;20,-33,21,-75;10,8;28,21;2,-106,4,-82;13,17,0,-1,-1,0",
"0;xs12_0gbaa4z121;0;;-9,49,-4,25;14,8,17,47;-13,-111;4,13,0,1,1,0",
"0;xs12_31egma;0;12,-41;8,5;17,23;5,-56;9,0,-1,0,0,1",
"0;xs12_2egm93;0;;;4,8;-5,-71,-5,-54,-5,-20;8,12,0,-1,-1,0",
"0;xs12_2egm96;0;;;2,8,9,5;-5,-20,-1,-30;5,8,-1,0,0,-1",
"0;xs12_178br;0;;-13,62;20,7,22,40;-10,-75;6,12,1,0,0,-1",
"xs8_32qk;xs12_5b8ozx123;0;;-2,-39;-6,-46;;3,4,-1,0,0,-1",
"xs7_178c;xs12_0ggs252z32;0;-1,-24;0,-25;;;-3,3,0,1,-1,0",
"0;xs7_178c;0;;;2,8;-3,-21;-2,1,0,1,1,0",
"0;xs12_32qj4c;0;;-11,54,1,8;22,67;-9,-83;8,9,0,1,1,0",
"0;xs12_641j4czx11;0;;1,5;13,15;0,-61,4,-28;11,11,-1,0,0,-1",
"0;xs12_ck3146z11;0;20,-72,30,-85;-1,33;24,6,41,59;-7,-126,2,-98;19,14,-1,0,0,1",
"0;xs12_ck3123z11;0;;-12,87,0,7;29,69,36,73,38,28,45,57;-2,-126;22,26,1,0,0,1",
"0;xs12_o4q552z01;0;;-5,27;7,8,12,33;-4,-49;-2,12,1,0,0,-1",
"xs12_g4q453z11;xs12_g4q552z11;0;;11,-54;5,-44;;0,0,1,0,0,1",
"0;xs12_g4q453z11;0;;-7,44,0,8;18,43,19,13;2,-56;6,14,1,0,0,1",
"xs18_g6p56z11y12552;xs12_354qic;0;14,-66;;;;0,5,0,1,-1,0",
"0;xs18_g6p56z11y12552;0;;-7,38;10,21,16,8;-2,-54;11,5,0,-1,1,0",
"0;xs12_358m93;0;21,-76;0,25,6,24;26,5;-9,-92,3,-126,6,-82;20,13,0,-1,-1,0",
"xs12_358m93;xs12_358m96;0;;;4,-42;10,-28;0,0,1,0,0,1",
"xs11_31461ac;xs12_358mic;0;;1,-40,8,-42,13,-66;-1,-50;;6,3,-1,0,0,-1",
"0;xs11_31461ac;0;;;3,8;-13,-88,-12,-55,-5,-20;4,11,0,1,-1,0",
"xs11_31e853;xs12_321e853;0;;-4,-52;-6,-54,-4,-64;;-1,0,1,0,0,1",
"0;xs11_31e853;0;;-16,73,4,12;27,72,38,7;-1,-135;19,16,1,0,0,1",
"xs11_31e853;xs12_252sga6;0;-7,-30;-1,-41;-6,-54;;-1,-1,1,0,0,1",
"xs16_33zy635861ac;xs12_35861ac;0;;2,-18;;;10,5,1,0,0,1",
"0;xs16_33zy635861ac;0;20,-73,36,-110,48,-134;12,8;42,14,42,31;-2,-74;7,11,1,0,0,1",
"0;xs12_4ap3z65;0;18,-64,25,-70,28,-48,30,-38,37,-76;4,7;24,6;13,-70;14,9,0,1,1,0",
"0;xs12_178c2ko;0;41,-156;-1,71;45,8,69,21,74,84;3,-231,19,-97;39,33,0,-1,1,0",
"0;xs12_354cga6;0;;-9,43,2,8;13,17,25,41;-5,-73,-5,-56;6,5,0,1,1,0",
"0;xs12_03loz643;0;19,-60;0,7,2,32;29,47;2,-84;15,8,0,-1,1,0",
"0;xs12_25a8og4c;0;14,-49;1,6,1,29;15,18;3,-46;12,9,-1,0,0,-1",
"0;xs12_25a8og8o;0;21,-74;-1,13,2,48;20,16,25,6,32,28;-5,-103;20,13,-1,0,0,-1",
"xs11_354c826;xs12_5b8og4c;0;-5,-24,-3,-42;5,-62;;;0,-1,1,0,0,1",
"0;xs11_354c826;0;10,-22;1,5,7,7;17,9;4,-39;4,3,1,0,0,1",
"xs11_32132ac;xs12_32132qk;0;;;12,-30,14,-12;-2,-74;0,0,1,0,0,1",
"xs15_66xrdzx321;xs11_32132ac;0;;1,-14;;;6,0,0,-1,1,0",
"0;xs15_66xrdzx321;0;14,-49;6,8;23,12;-1,-45,4,-53;12,3,0,-1,1,0",
"0;xs12_31eozx123;0;17,-60;0,47,1,6;20,21,28,48;-3,-142;6,3,1,0,0,1",
"0;xs12_178c453;0;;-9,63,0,7;22,45;0,-76;10,16,0,-1,1,0",
"xs12_178c0ca4;xs12_32qczx113;0;12,-61;;11,-14;-3,-50;0,0,0,1,1,0",
"xs7_178c;xs12_178c0ca4;0;;;7,-12;;0,0,1,0,0,1",
"xs12_2lmzca1;xs12_0cq23z65;0;;4,-33;8,-13;3,-44;0,1,1,0,0,1",
"xs7_3lo;xs12_2lmzca1;0;;;-2,-26;;2,-4,-1,0,0,1",
"0;xs7_3lo;0;8,-25;2,12;12,7;3,-33;6,5,0,1,1,0",
"xs18_0gw628c4871z343;xs12_1784c826;0;8,-42;;;;11,0,-1,0,0,1",
"0;xs18_0gw628c4871z343;0;;-12,63,-7,41,1,5;39,20,49,73;-18,-189,6,-107,7,-85;29,23,-1,0,0,1",
"xs6_696;xs12_drz1226;0;;-5,-51;-5,-66,10,-34;-5,-81,10,-24,19,-32;6,0,0,-1,1,0",
"0;xs6_696;0;;;1,6;-2,-18;-2,1,1,0,0,1",
"0;xs12_3pcz643;0;;-34,145,0,11;38,6,48,46,53,131;-29,-196,-8,-158;16,28,-1,0,0,-1",
"0;xs12_drz346;0;22,-80;-7,35,2,7;37,67;-7,-133,-7,-105;10,15,1,0,0,1",
"xs10_0cp3z32;xs12_3pczw1246;0;;9,-46;7,-40;;0,6,1,0,0,-1",
"0;xs10_0cp3z32;0;15,-43;1,6;21,31;-1,-54,4,-74;12,8,-1,0,0,1",
"xs10_0drz32;xs12_312312ko;0;2,-60;;;-12,-66;2,0,0,-1,1,0",
"0;xs10_0drz32;0;;-5,35,0,7;18,48;-11,-67;4,3,-1,0,0,1",
"xs10_0cp3z32;xs12_3pczw1ac;0;;;-2,-70;8,-36;0,6,1,0,0,-1",
"xs10_0drz32;xs12_g853zdb;0;11,-94;-11,-12;;;2,8,-1,0,0,-1",
"xs14_69bqic;xs12_0ol3zca1;0;7,-64,13,-62;-4,-32;-4,-46,2,-48;5,-48;1,-2,1,0,0,1",
"0;xs14_69bqic;0;;-4,23;10,8;-2,-36;11,2,0,-1,1,0",
"0;xs12_0ggm96z32;0;19,-68,26,-55;7,7;23,35;9,-66;18,3,0,-1,1,0",
"xs10_g0s252z11;xs12_0gila4z32;0;;;10,-18;4,-32;6,5,0,-1,-1,0",
"0;xs10_g0s252z11;0;10,-32;1,5;17,20;-6,-63;7,8,0,-1,1,0",
"0;xs12_0ggka52z32;0;;;5,22,9,6,17,38;-12,-75,-9,-50;4,9,0,-1,1,0",
"xs10_31eg8o;xs12_g88b52z23;0;-6,-30;;-6,-54;;-1,4,0,1,-1,0",
"0;xs10_31eg8o;0;;-3,35,-2,18;10,7,17,21;4,-47;8,13,1,0,0,-1",
"0;xs12_g88a53z23;0;11,-35,21,-77;5,5;18,22,23,17;2,-83;6,16,1,0,0,-1",
"xs7_25ac;xs12_0g0s256z121;0;;;7,-12;0,-38;0,6,0,1,-1,0",
"0;xs7_25ac;0;;-5,29;9,6;-1,-42;1,17,-1,0,0,-1",
"xs10_g0s252z11;xs12_0g0s252z321;0;4,-60;-12,-12;;-10,-71;-1,0,1,0,0,1",
"xs7_178c;xs12_69iczx113;0;12,-58;;;2,-64;6,5,0,-1,-1,0",
"0;xs12_178kia4;0;;-6,119,0,7;54,77,59,132;-8,-161;36,32,0,-1,-1,0",
"0;xs12_178ka52;0;;;1,5,13,14;-9,-36,-5,-51,-2,-27;5,7,-1,0,0,-1",
"xs10_ggka52z1;xs12_0g8ka52z23;0;;;0,-57;10,-32;6,5,0,-1,-1,0",
"0;xs10_ggka52z1;0;;-3,22;17,8;-3,-56,2,-34;7,8,0,-1,1,0",
"xs8_178k8;xs12_0g8ka23z23;0;;-10,-16;16,-86,22,-12;;0,6,1,0,0,-1",
"0;xs8_178k8;0;;-10,48,-2,16;12,5;-5,-61;8,6,-1,0,0,1",
"xs18_32ak8zy0113y0cic;xs12_0g8k871z23;0;;;;3,-50;6,0,0,-1,1,0",
"0;xs18_32ak8zy0113y0cic;0;18,-41;-3,28,1,6,4,20;28,5;0,-100;15,12,0,-1,-1,0",
"xs8_178k8;xs12_178ka23;0;;-16,-12,-10,-86;16,-16;;0,6,0,1,-1,0",
"xs8_178k8;xs12_178k871;0;17,-82;11,-128,17,-78;;;0,0,1,0,0,1",
"xs9_25ako;xs12_3215ako;0;-10,-29;-1,-53;-5,-46;;0,-2,0,1,1,0",
"0;xs9_25ako;0;;-5,28;13,8;0,-41;12,10,-1,0,0,-1",
"xs10_25a8426;xs12_25akg84c;0;;-4,-43;-6,-58;;-1,-1,1,0,0,1",
"0;xs10_25a8426;0;;;4,10,13,5,21,21;-9,-34,-8,-58,2,-50;8,8,-1,0,0,-1",
"0;xs12_35iczx113;0;16,-54;5,7;17,16;0,-55,1,-71,4,-28;11,3,-1,0,0,1",
"xs11_25a84ko;xs12_3542ako;0;;-2,-52;-6,-58;;6,4,-1,0,0,-1",
"0;xs11_25a84ko;0;13,-34,17,-61;5,7;23,22;-3,-67;11,11,0,-1,-1,0",
"xs11_358gka4;xs12_358gka6;0;;;3,-57;9,-28;0,0,1,0,0,1",
"0;xs11_358gka4;0;;-4,24,4,19;16,6;-3,-56;5,9,1,0,0,1",
"xs10_3215ac;xs12_35icz65;0;;-11,-15,-4,-36;;-7,-58;5,3,0,-1,-1,0",
"0;xs10_3215ac;0;;-3,22;15,8;-3,-68,5,-35;10,6,-1,0,0,1",
"xs9_25a84c;xs12_17842ak8;0;14,-67;9,-46;;3,-71,6,-49;7,4,-1,0,0,-1",
"0;xs9_25a84c;0;12,-38;5,6;17,25;1,-55;5,12,0,1,-1,0",
"xp2_0s01110sy733zg8g222z0p4jzw11;xs12_25a842ac;0;;5,-90,20,-90;;;0,8,0,1,1,0",
"0;xp2_0s01110sy733zg8g222z0p4jzw11;0;20,-70;4,7,14,21;39,26;0,-85,4,-293,11,-97;7,-6,0,1,1,0",
"xs11_358gka4;xs12_ci52zw1246;0;;0,-81,11,-89;-12,-82,0,-78;;6,4,0,-1,-1,0",
"0;xs12_025iczca1;0;16,-56;-1,28;32,10,36,7;2,-41,4,-71,14,-69;26,13,0,-1,-1,0",
"0;xs12_25iczw1252;0;17,-59;3,7;21,25,22,10,22,46,31,23;-6,-93,3,-74;15,8,-1,0,0,1",
"xs9_25a84c;xs12_g8jdz56;0;-4,-31;2,-62;-11,-74;;5,0,0,-1,1,0",
"xp2_7y7e;xs12_32akg84c;0;8,-58;0,-95,11,-59;5,-46;;7,7,0,1,-1,0",
"xp2_7;xp2_7y7e;1;;;-15,-130;13,-20;2,-11,0,-1,1,0",
"0;xp2_7;0;;;2,5;-4,-17;0,0,0,1,1,0",
"0;xs12_8ljgzx252;0;;-18,81,0,49,9,5;28,39,39,80;-24,-153;15,19,-1,0,0,1",
"xs10_31eg8o;xs12_0gjl8z56;0;-2,-64;-1,-65;-6,-56;-10,-70;-2,4,0,1,-1,0",
"0;xs12_0ggm93z32;0;8,-22,19,-49;3,7;14,10;2,-55;8,3,-1,0,0,1",
"0;xs12_0g8ge13z23;0;12,-40;4,6,11,11;24,17;4,-47,13,-46;9,13,1,0,0,-1",
"xs10_2eg853;xs12_31eg853;0;2,-78;-9,-20;;-12,-78;-1,0,1,0,0,1",
"0;xs10_2eg853;0;9,-26;4,7;13,6;2,-51,7,-19;13,6,-1,0,0,1",
"xs10_31eg8o;xs12_31eg8426;0;;8,-42;;5,-52,12,-31;0,0,1,0,0,1",
"xs9_178426;xs12_178421e8;0;13,-63;10,-50;;4,-67,7,-45;0,0,1,0,0,1",
"0;xs9_178426;0;;-11,51,6,5,9,29;32,30;-6,-98;14,16,0,1,-1,0",
"0;xs12_17842156;0;;-14,63,-2,77,6,7;48,78;-11,-121,-6,-136,11,-108;19,17,0,-1,1,0",
"xs7_2596;xs12_4ai3zx1246;0;-10,-24;;-5,-74,-2,-89,6,-64;8,-71;4,3,0,-1,-1,0",
"0;xs7_2596;0;;0,7;;-3,-27;5,4,-1,0,0,-1",
"xs19_cky06952zwhik8zw1;xs12_4ai3zx1ac;0;;;9,-12;;5,10,-1,0,0,-1",
"xs15_6996zwo8a6;xs19_cky06952zwhik8zw1;0;;;-1,-50,9,-37;4,-48;0,-1,1,0,0,1",
"xs7_178c;xs15_6996zwo8a6;0;;;3,-47;8,-24;9,-2,0,-1,1,0",
"0;xs12_651i4ozx11;0;13,-44,22,-69;2,7;25,32;-3,-80;7,14,1,0,0,-1",
"xs10_0j96z32;xs12_0j96z346;0;10,-94,19,-99;-12,-12;12,-12;;0,0,1,0,0,1",
"0;xs10_0j96z32;0;12,-40;1,5;22,28;-10,-88;7,16,-1,0,0,-1",
"xs10_358gkc;xs12_69jzx1246;0;-5,-45;;-11,-74,-4,-67;;5,4,0,-1,-1,0",
"0;xs10_358gkc;0;;-1,12;7,6;-2,-50,1,-24;10,8,-1,0,0,1",
"xs10_0j96z32;xs12_69jzx1ac;0;;-11,-13;;-17,-90,-10,-83;3,0,-1,0,0,1",
"0;xs12_xg84213zca1;0;;-7,37,3,6;19,36;-4,-50,2,-60;15,4,-1,0,0,1",
"xs10_xg853z321;xs12_358gzy012ko;0;;;0,-46,5,-45,11,-44;9,-36;9,-1,0,-1,1,0",
"0;xs10_xg853z321;0;;1,6;10,11;0,-48,3,-24;10,4,-1,0,0,1",
"0;xs12_330fho;0;8,-24;9,5;16,12;7,-39;12,4,-1,0,0,1",
"0;xs12_3hu066;0;;;2,8,8,7;-5,-21,-1,-37;8,1,-1,0,0,1",
"0;xs12_330f96;0;;-5,43,-1,12;12,7;-3,-55;9,9,0,-1,-1,0",
"xs11_2560ui;xs12_32qb8o;0;-9,-28;;-4,-64;;1,-1,0,1,1,0",
"0;xs11_2560ui;0;;-7,38;14,8;-2,-51,2,-56;13,10,-1,0,0,-1",
"0;xs12_raar;0;8,-19;0,7;10,6;-1,-31;4,5,0,1,1,0",
"xs11_dbz352;xs12_32130f9;0;19,-86;;12,-14;;0,0,0,1,1,0",
"xs6_bd;xs11_dbz352;0;;;-2,-22;;0,3,1,0,0,-1",
"0;xs6_bd;0;;;2,10,6,7;-9,-42,-5,-23;-1,4,1,0,0,1",
"xs11_bdz352;xs12_31230f9;0;19,-86;;12,-14;;0,0,0,1,1,0",
"xs15_2lmz056zz33;xs11_bdz352;0;15,-76;;;;2,7,-1,0,0,-1",
"0;xs15_2lmz056zz33;0;;-7,38;13,34,14,7;9,-73;17,7,0,-1,-1,0",
"0;xs12_39c0f9;0;13,-42;-1,28;16,27,19,7,21,28;-4,-56,2,-61,4,-40;9,10,1,0,0,-1",
"xs11_2lmz641;xs12_628c0f9;0;-3,-42;;-10,-58;;-1,7,0,1,-1,0",
"xs6_39c;xs11_2lmz641;0;;;-2,-26;;2,-4,-1,0,0,1",
"xs12_c93zx2552;xs6_39c;0;;;;-1,-40;2,0,-1,0,0,1",
"0;xs12_c93zx2552;0;;;4,5;-5,-39,-4,-17;-6,7,0,1,1,0",
"xs18_g8g031460uiz121;xs12_31460ui;0;7,-38;;;;4,0,1,0,0,1",
"0;xs18_g8g031460uiz121;0;23,-65,24,-87;-9,53;33,7,42,30;-7,-150;6,19,1,0,0,1",
"0;xs12_4s0c93z11;0;15,-50,23,-79,25,-66;4,8;16,22;-4,-66,-2,-79,-1,-47;7,15,0,1,-1,0",
"0;xs12_6960ui;0;10,-32;1,20;18,5;1,-42;5,6,1,0,0,1",
"xs11_2530f9;xs12_6530f9;0;0,-56;;;-8,-62;0,0,1,0,0,1",
"0;xs11_2530f9;0;;-7,37;16,7,21,41;2,-54;12,11,-1,0,0,1",
"0;xs12_3560ui;0;10,-24,15,-45;0,7;13,11;1,-44;0,9,1,0,0,-1",
"0;xs12_ggdbz65;0;13,-45,19,-42;5,13;13,10,19,7;1,-39;8,3,1,0,0,1",
"0;xs12_kc3213z11;0;20,-57,21,-76;3,18,9,14;31,7,31,44;-7,-115;12,11,1,0,0,1",
"0;xs12_3123c4go;0;34,-127,37,-87;4,6,7,43;35,5,50,75;7,-96,14,-133;24,19,1,0,0,-1",
"xs18_bdggx696zw1023;xs12_8o6413z32;0;;;8,-14;;0,6,1,0,0,-1",
"xp2_7;xs18_bdggx696zw1023;0;-6,-95;1,-134,18,-108,19,-90;-3,-100;-1,-109;-1,-2,0,1,-1,0",
"0;xs12_0ggc93z641;0;10,-32,17,-34;3,6;13,10,20,12;5,-38;13,3,0,-1,1,0",
"xp2_318c;xs12_08o6413z32;0;;-4,-40;-6,-46,11,-12;-5,-70;4,-1,-1,0,0,1",
"0;xp2_318c;0;;0,8;6,8;1,-21;8,3,-1,0,0,1",
"0;xs12_3lozx352;0;11,-34;4,6;16,7;-5,-75,-1,-35;9,6,0,-1,-1,0",
"xs8_178k8;xs12_0g8o652z23;0;11,-54;;;-3,-60;0,6,1,0,0,-1",
"0;xs12_256o8a6;0;;-14,66;21,65,32,6;-1,-117;11,14,1,0,0,1",
"0;xs12_0g8o652z121;0;;-17,86,-6,72,1,6;;-8,-98;18,4,-1,0,0,1",
"0;xs12_3123cko;0;15,-53,23,-33;8,20;25,6;6,-47;17,7,0,-1,-1,0",
"xs11_08o652z32;xs12_08o653z32;0;;;2,-62;10,-36;0,0,1,0,0,1",
"0;xs11_08o652z32;0;;-7,105,0,8;38,17,48,106;0,-170;19,22,0,1,1,0",
"0;xs12_g8o653z11;0;;-10,50,6,8;19,35;-7,-68;8,11,-1,0,0,1",
"0;xs12_g8ka53z11;0;;-8,39,2,7;18,22;-10,-63,-4,-60;1,8,1,0,0,1",
"0;xs12_0g8ka52z121;0;;-2,47,1,6,1,58;;6,-70;13,20,1,0,0,1",
"0;xs11_3586246;0;12,-39;-2,26,7,8;16,9,23,10;2,-65;-4,13,0,-1,-1,0",
"0;xs11_69lic;0;11,-36;4,8;17,24;9,-44;3,4,1,0,0,1",
"0;xs11_178c4go;0;;0,8;21,35,23,22;-3,-82,-2,-48;17,12,0,-1,1,0",
"xs5_253;xs11_g88a52z23;0;;-12,-12,4,-49;1,-47;-7,-49;5,2,0,-1,-1,0",
"0;xs5_253;0;;0,7;;2,-20;6,2,-1,0,0,1",
"xs7_178c;xs11_g0s453z11;0;-5,-24;3,-49;;;3,-2,-1,0,0,1",
"0;xs11_2ege13;0;13,-44;0,22;19,6;0,-34;7,7,-1,0,0,1",
"xp2_7;xs11_178b52;0;;2,-25;1,-27;2,-20;-3,-2,1,0,0,1",
"0;xs11_178jd;0;23,-85;-16,72;28,6;-18,-156;3,22,0,-1,-1,0",
"0;xs11_256o8go;0;12,-40;-3,22;13,26,16,8;-3,-53,7,-39;4,2,1,0,0,1",
"0;xs11_g8o652z11;0;;-11,53;11,8,18,38;-8,-65;7,11,-1,0,0,1",
"xs7_178c;xs11_178c48c;0;19,-196,19,-158;;22,-12;-20,-198;0,0,1,0,0,1",
"0;xs11_3215a8o;0;15,-52,32,-93;1,23;17,7,37,40;-6,-68;8,10,1,0,0,1",
"0;xs11_25iczx113;0;18,-62,31,-88,38,-94;10,38;23,5;15,-77;21,17,-1,0,0,-1",
"xs8_25ak8;xs11_25akg8o;0;-10,-29;-1,-53;-5,-46;;4,4,0,-1,-1,0",
"0;xs8_25ak8;0;;;1,5,8,14;-7,-26;0,2,1,0,0,1",
"xs5_253;xs11_35a8426;0;-2,-68,6,-86;-5,-65;-6,-74,11,-12;;2,0,0,-1,1,0",
"0;xs11_25icz65;0;11,-37;4,25;17,12,25,6;8,-62,15,-47;9,10,0,1,1,0",
"xs5_253;xs11_69jzx56;0;;-12,-37;-5,-38;-7,-66,-4,-73;-5,4,0,1,-1,0",
"0;xs11_3542156;0;69,-268,78,-152;4,7,7,111;68,103;8,-170,15,-266;39,21,0,1,1,0",
"0;xs11_69jzx123;0;;-7,35,10,6;119,150,135,193;31,-440,32,-206;66,67,-1,0,0,-1",
"xs5_253;xs11_0g0s252z121;0;-2,-35;;2,-39;-8,-50,3,-37;-1,-3,0,1,1,0",
"0;xs11_17842ac;0;;-9,45;14,8,17,35;0,-57;12,7,-1,0,0,1",
"xs11_178kic;xs11_17842sg;0;9,-51;;14,-12;4,-37;0,0,1,0,0,1",
"xs7_178c;xs11_178kic;0;;;14,-12;-2,-62;0,0,1,0,0,1",
"xs10_31eg8o;xs11_321eg8o;0;;-4,-52;-6,-54,-4,-64;;-1,0,1,0,0,1",
"xs6_696;xs11_4ai3zx123;0;;-7,-12;8,-45,15,-36;-2,-98,6,-88;10,5,-1,0,0,1",
"0;xs11_03ia4z65;0;;-16,73,6,8;27,28,42,51;-11,-132,-4,-120,1,-86;15,23,1,0,0,-1",
"xs15_0g8k453zoo11;xs11_g0s256z11;0;9,-48;;;;1,0,0,1,1,0",
"0;xs15_0g8k453zoo11;0;7,-21;4,9;19,8;3,-27;17,-3,0,-1,1,0",
"0;xs11_g0s253z11;0;;;1,5,8,8;-11,-49,5,-21;6,7,-1,0,0,-1",
"0;xs11_31eg84c;0;;-8,39;7,5,16,49,32,85;-26,-146,-20,-161,-20,-146;7,23,0,-1,-1,0",
"0;xs11_xg853zca1;0;;-4,24;11,8,21,33;-3,-77,-2,-53,7,-46;13,10,0,-1,1,0",
"0;xs11_wg84213z65;0;;1,5,5,11;17,29;2,-73,8,-42;0,1,1,0,0,1",
"xs10_0drz32;xs11_0cp3z65;0;;2,-73,15,-84;2,-75;11,-36;3,6,-1,0,0,-1",
"xs15_cky233z3lo;xs11_0drz65;0;;;10,-12;;2,2,-1,0,0,1",
"0;xs15_cky233z3lo;0;;-24,116,0,7;35,16,36,115;-12,-135,-4,-151;17,33,-1,0,0,-1",
"0;xs11_ggm952z1;0;;-5,27,0,8;7,9;-7,-44;0,4,0,1,1,0",
"xs7_25ac;xs11_178ka6;0;;;-9,-62;-17,-90,-11,-140;-2,4,1,0,0,-1",
"0;xs11_ggka53z1;0;;-3,27,1,5;16,40;0,-54;7,11,1,0,0,-1",
"0;xs11_g8ka52z11;0;;-6,34;9,5,13,33;-11,-68;11,14,-1,0,0,-1",
"0;xs10_32qr;0;;-3,21;6,5;-5,-52,2,-34;3,7,1,0,0,1",
"0;xs10_g8o652z01;0;;;5,5,7,28;-14,-78,-6,-40;-3,9,-1,0,0,1",
"xs4_33;xs10_3542ac;0;;-6,-12;1,-35;-4,-36;-5,3,1,0,0,1",
"0;xs4_33;0;;;1,5;-2,-17;-1,1,1,0,0,1",
"xs7_178c;xs10_1784ko;0;;;11,-12;-1,-66;0,0,1,0,0,1",
"0;xs10_1784213;0;;-13,61;18,8,26,61,43,106;-18,-124,-10,-118;12,18,1,0,0,-1",
"0;xs10_ggka23z1;0;14,-47,19,-48;1,6;19,9,25,35;-1,-74;12,5,-1,0,0,1",
"0;xs10_wg853z65;0;21,-56;0,8,11,26;39,36;3,-66,14,-84;22,9,0,-1,1,0",
"xs14_3213213zy566;xs10_drz32;0;17,-78;;;;0,0,0,1,1,0",
"0;xs14_3213213zy566;0;13,-45;8,7;28,10;8,-23;13,0,0,1,1,0",
"0;xs10_178kk8;0;;-7,42,1,5;16,41;4,-64;11,7,1,0,0,1",
"0;xs10_178ka4;0;11,-30;-1,11;26,8;-2,-90,-2,-31;11,11,0,-1,-1,0",
"0;xs10_69ar;0;11,-36;2,7;12,24;-2,-49;8,6,0,-1,1,0",
"0;xs10_4al96;0;;-23,101;23,39,32,7,34,56;-22,-117,-13,-114;9,28,-1,0,0,-1",
"0;xs10_35ako;0;9,-29;0,12;11,8;0,-24;6,9,-1,0,0,1",
"xs8_25ak8;xs10_g8ka52z01;0;;;11,-12;1,-42;5,0,-1,0,0,1",
"0;xs9_4aar;0;;-6,32;14,8;-3,-44;6,3,0,1,1,0",
"0;xs9_312453;0;;-5,27;7,8,11,29;-3,-52;4,7,-1,0,0,1",
"xs7_178c;xs9_178kc;0;12,-60;;12,-12;;0,0,1,0,0,1",
"0;xs9_178ko;0;;-3,22,5,7;17,32;-2,-53;9,11,0,-1,-1,0",
"0;xs9_31ego;0;;-9,43,0,8;15,27;-4,-55;0,12,0,1,1,0",
"0;xs9_g0g853z11;0;;0,8;12,26;-8,-68,-7,-44;6,9,-1,0,0,1",
"0;xs9_31248go;0;11,-35,18,-37;1,23;23,5;-5,-75;4,7,0,1,1,0",
"0;xs8_312ko;0;;-11,51;15,5;-6,-63,-3,-78;8,7,-1,0,0,1",
"0;xs8_31248c;0;;-6,34;13,33,14,5;-11,-68;12,12,-1,0,0,1",
"0;xs8_69ic;0;;;2,8;-10,-98,-5,-21;7,8,0,1,1,0",
"0;xs8_35ac;0;9,-28;1,7;9,15;2,-27;3,2,-1,0,0,1",
"0;xs8_6996;0;;;1,5;-4,-18;-1,-1,1,0,0,1",
"0;xs8_3pm;0;8,-22;1,8;8,9;2,-26;4,0,-1,0,0,1",
"0;xs6_25a4;0;;;2,7;-4,-20,-3,-62;6,9,-1,0,0,1",
"xs8_6996;xs6_356;0;;;;-1,-26;2,0,-1,0,0,1",
"xs8_6996;xs4_252;0;;;;-7,-50;-6,2,1,0,0,1"
]);
